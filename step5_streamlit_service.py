import streamlit as st
from openai import OpenAI

from steps.step4_retrieval import retrieve_similar

client = OpenAI(
    api_key=st.secrets["OPENAI_API_KEY"],
    base_url="https://api.proxyapi.ru/openai/v1",
)


def get_course_recommendation(user_query: str):
    """
    –ü–æ–ª—É—á–∞–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∫—É—Ä—Å–∞–º –∏–∑ –Ω–∞—à–µ–π –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π
    """
    try:
        similar_courses = retrieve_similar(user_query, top_k=3)

        context = "\n\n".join(
            [f"–ö—É—Ä—Å {url}:\n{summary}" for url, summary in similar_courses]
        )
        with open("prompts/user_prompt_template.txt", "r") as f:
            prompt = f.read()
        response = client.chat.completions.create(
            model="gpt-4o-mini",
            messages=[
                {
                    "role": "user",
                    "content": prompt.format(user_query=user_query, context=context),
                },
            ],
            temperature=0.7,
            max_tokens=1000,
        )
        return response.choices[0].message.content
    except Exception as e:
        return f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}"


def main():
    st.title("üéì –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ –≤—ã–±–æ—Ä—É –∫—É—Ä—Å–æ–≤ Karpov.Courses")

    st.write(
        """
    ### –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!
    –û–ø–∏—à–∏—Ç–µ –≤–∞—à–∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã –∏ —Ü–µ–ª–∏ –≤ –æ–±—É—á–µ–Ω–∏–∏, –∏ —è –ø–æ–º–æ–≥—É –ø–æ–¥–æ–±—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∫—É—Ä—Å—ã 
    –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞ Karpov.Courses.
    """
    )

    user_input = st.text_area(
        "–û–ø–∏—à–∏—Ç–µ –≤–∞—à–∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã –∏ —Ü–µ–ª–∏:",
        height=150,
        placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –Ø —Ö–æ—á—É –Ω–∞—É—á–∏—Ç—å—Å—è –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∏ —Ä–∞–±–æ—Ç–∞—Ç—å —Å Python...",
    )

    if st.button("–ü–æ–¥–æ–±—Ä–∞—Ç—å –∫—É—Ä—Å—ã"):
        if user_input:
            with st.spinner("–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∫—É—Ä—Å—ã..."):
                recommendation = get_course_recommendation(user_input)
                st.write("### –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–µ –∫—É—Ä—Å—ã:")
                st.write(recommendation)
        else:
            st.warning("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –≤–∞—à–∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã –∏ —Ü–µ–ª–∏ –æ–±—É—á–µ–Ω–∏—è.")

    with st.sidebar:
        st.header("–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –ª—É—á—à–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏")
        st.write(
            """
        1. –£–∫–∞–∂–∏—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –æ–±–ª–∞—Å—Ç–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç
        2. –û–ø–∏—à–∏—Ç–µ —Å–≤–æ–π —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å –∑–Ω–∞–Ω–∏–π
        3. –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –∂–µ–ª–∞–µ–º—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –æ–±—É—á–µ–Ω–∏—è
        """
        )


if __name__ == "__main__":
    main()
